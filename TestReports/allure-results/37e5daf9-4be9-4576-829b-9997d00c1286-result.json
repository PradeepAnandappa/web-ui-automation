{"name": "test_GroupsUI", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'https://app.allgeo.com/monitor/locate-schedule' == None", "trace": "self = <test_T1097761.Test_Groups object at 0x000002E7E0EA6210>\n\n    @pytestrail.case('C32957')\n    def test_GroupsUI(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        self.monitorPage = MonitorPage(self.driver)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.leftNavigationPanelPage = LeftNavigationPanelPage(self.driver)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage = EmployeesPage(self.driver)\n        time.sleep(5)\n        page_found = self.employeesPage.validate_page_title()\n        assert page_found\n        self.employeesPage.click_company_icon(\"Group\")\n        self.groupsPage = GroupsPage(self.driver)\n        time.sleep(5)\n        page_found = self.groupsPage.get_page_title()\n        assert page_found\n        self.groupsPage.click_AddNew()\n        self.addEditGroupPage = AddEditGroupPage(self.driver)\n        assert self.addEditGroupPage.validate_Add_Group_Modal()\n        groupId = self.addEditGroupPage.generate_random_string(5)+\"02\"\n        groupName = self.addEditGroupPage.generate_random_string(5)\n        self.addEditGroupPage.add_group(groupId, groupName)\n        assert self.addEditGroupPage.validate_SuccessUpdateMessage(\"successfully\")\n        self.leftNavigationPanelPage.click_Monitor()\n        self.monitorPage.click_TrackingSchedularTab()\n        time.sleep(2)\n        page_URL = self.monitorPage.getPageURL()\n        Expected_URL = config.baseURL + \"/monitor/locate-schedule\"\n>       assert Expected_URL == page_URL\nE       AssertionError: assert 'https://app.allgeo.com/monitor/locate-schedule' == None\n\nsrc\\Tests\\SmokeSanityTestSuite\\Monitor\\TrackingScheduler\\TrackingScheduleUI\\AddNonRecurringScheduler\\test_T1097761.py:49: AssertionError"}, "start": 1715157467620, "stop": 1715159516882, "uuid": "295db6ea-7290-4dff-aead-72b8e9cf666c", "historyId": "385050b0c59ca0c9c301598c83dc90ad", "testCaseId": "385050b0c59ca0c9c301598c83dc90ad", "fullName": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.AddNonRecurringScheduler.test_T1097761.Test_Groups#test_GroupsUI", "labels": [{"name": "tag", "value": "testrail(ids=('C32957',))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.AddNonRecurringScheduler"}, {"name": "suite", "value": "test_T1097761"}, {"name": "subSuite", "value": "Test_Groups"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "89936-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.AddNonRecurringScheduler.test_T1097761"}]}