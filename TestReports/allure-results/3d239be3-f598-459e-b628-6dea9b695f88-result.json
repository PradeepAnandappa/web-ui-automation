{"name": "test_LocateScheduleCopy", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF7A3517032+63090]\n\t(No symbol) [0x00007FF7A3482C82]\n\t(No symbol) [0x00007FF7A331EC65]\n\t(No symbol) [0x00007FF7A336499D]\n\t(No symbol) [0x00007FF7A3364ADC]\n\t(No symbol) [0x00007FF7A33A5B37]\n\t(No symbol) [0x00007FF7A338701F]\n\t(No symbol) [0x00007FF7A33A3412]\n\t(No symbol) [0x00007FF7A3386D83]\n\t(No symbol) [0x00007FF7A33583A8]\n\t(No symbol) [0x00007FF7A3359441]\n\tGetHandleVerifier [0x00007FF7A39125AD+4238317]\n\tGetHandleVerifier [0x00007FF7A394F70D+4488525]\n\tGetHandleVerifier [0x00007FF7A39479EF+4456495]\n\tGetHandleVerifier [0x00007FF7A35F0576+953270]\n\t(No symbol) [0x00007FF7A348E54F]\n\t(No symbol) [0x00007FF7A3489224]\n\t(No symbol) [0x00007FF7A348935B]\n\t(No symbol) [0x00007FF7A3479B94]\n\tBaseThreadInitThunk [0x00007FF802F4257D+29]\n\tRtlUserThreadStart [0x00007FF80460AA58+40]", "trace": "self = <test_T1097854.Test_LocateScheduleCopy object at 0x000001D7FF72F750>\n\n    @pytestrail.case('C33234', 'C33235', 'C33236', 'C33237')\n    def test_LocateScheduleCopy(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        self.monitorPage = MonitorPage(self.driver)\n        self.trackingSchedulerPage = TrackingSchedulerPage(self.driver)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.monitorPage.switch_to_ChildAccount()\n        time.sleep(2)\n        self.leftNavigationPanelPage = LeftNavigationPanelPage(self.driver)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage = EmployeesPage(self.driver)\n        time.sleep(5)\n        page_found = self.employeesPage.validate_page_title()\n        assert page_found\n        self.employeesPage.click_Addnew()\n        time.sleep(2)\n        empName = self.employeesPage.generate_random_string(7)\n        empPhone = self.employeesPage.generate_random_phone_number()\n        self.employeesPage.populate_addEmployeeForm(empName, empPhone)\n        self.employeesPage.accept_termCheckbox()\n        self.employeesPage.click_Add()\n        assert self.employeesPage.validate_SuccessUpdateMessage(\"Successfully\")\n        time.sleep(2)\n    \n        self.leftNavigationPanelPage.click_Monitor()\n        time.sleep(4)\n        self.monitorPage.click_TrackingSchedularTab()\n        time.sleep(2)\n        page_URL = self.monitorPage.getPageURL()\n        Expected_URL = config.baseURL + \"/monitor/locate-schedule\"\n        assert Expected_URL == page_URL\n        self.trackingSchedulerPage = TrackingSchedulerPage(self.driver)\n        self.trackingSchedulerPage.click_AddNew()\n        self.addEditTrackingSchedulePage = AddEditTrackingSchedulePage(self.driver)\n        scheduleName = self.addEditTrackingSchedulePage.generate_random_string(5) + \"101\"\n        self.addEditTrackingSchedulePage.enter_ScheduleName(scheduleName)\n        self.addEditTrackingSchedulePage.select_Employee()\n        time.sleep(1)\n        self.addEditTrackingSchedulePage.select_Group(empName)\n        time.sleep(1)\n        self.addEditTrackingSchedulePage.click_Done()\n        time.sleep(2)\n        self.trackingSchedulerPage.logout_user()\n        self.loginPage.user_login(\"test-web-automation-child\", \"m101\", \"Test@123\")\n        time.sleep(2)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.monitorPage.click_TrackingSchedularTab()\n        page_URL = self.monitorPage.getPageURL()\n        Expected_URL = config.baseURL + \"/monitor/locate-schedule\"\n        assert Expected_URL == page_URL\n        assert self.trackingSchedulerPage.check_ActionLink_disabled(\"edit\", scheduleName)\n        assert self.trackingSchedulerPage.check_ActionLink_enabled(\"view\", scheduleName)\n        assert self.trackingSchedulerPage.check_ActionLink_disabled(\"delete\", scheduleName)\n>       assert self.trackingSchedulerPage.check_ActionLink_disabled(\"copy\", scheduleName)\n\nsrc\\Tests\\SmokeSanityTestSuite\\Monitor\\TrackingScheduler\\TrackingScheduleUI\\CopyLocateSchedule\\test_T1097854.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\PageObjects\\Monitor\\TrackingScheduler\\TrackingScheduleUI\\LocateScheduleMainView\\TrackingSchedulerPage.py:126: in check_ActionLink_disabled\n    attr_value = self.get_AttributeValue(element_locator, \"class\")\nsrc\\PageObjects\\BasePage\\BasePage.py:138: in get_AttributeValue\n    element = WebDriverWait(self.driver, 10).until(ec.visibility_of_element_located(by_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ed107c2cf07b5cc37dc3a9a42e65f295\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001D7FFF4C2C0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7A3517032+63090]\nE       \t(No symbol) [0x00007FF7A3482C82]\nE       \t(No symbol) [0x00007FF7A331EC65]\nE       \t(No symbol) [0x00007FF7A336499D]\nE       \t(No symbol) [0x00007FF7A3364ADC]\nE       \t(No symbol) [0x00007FF7A33A5B37]\nE       \t(No symbol) [0x00007FF7A338701F]\nE       \t(No symbol) [0x00007FF7A33A3412]\nE       \t(No symbol) [0x00007FF7A3386D83]\nE       \t(No symbol) [0x00007FF7A33583A8]\nE       \t(No symbol) [0x00007FF7A3359441]\nE       \tGetHandleVerifier [0x00007FF7A39125AD+4238317]\nE       \tGetHandleVerifier [0x00007FF7A394F70D+4488525]\nE       \tGetHandleVerifier [0x00007FF7A39479EF+4456495]\nE       \tGetHandleVerifier [0x00007FF7A35F0576+953270]\nE       \t(No symbol) [0x00007FF7A348E54F]\nE       \t(No symbol) [0x00007FF7A3489224]\nE       \t(No symbol) [0x00007FF7A348935B]\nE       \t(No symbol) [0x00007FF7A3479B94]\nE       \tBaseThreadInitThunk [0x00007FF802F4257D+29]\nE       \tRtlUserThreadStart [0x00007FF80460AA58+40]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "start": 1713346726933, "stop": 1713346893786, "uuid": "514696ac-0b1d-4f2f-96a4-e8b49a92f2bb", "historyId": "1978c637219830c90c0f91929db28b64", "testCaseId": "1978c637219830c90c0f91929db28b64", "fullName": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.CopyLocateSchedule.test_T1097854.Test_LocateScheduleCopy#test_LocateScheduleCopy", "labels": [{"name": "tag", "value": "testrail(ids=('C33234', 'C33235', 'C33236', 'C33237'))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.CopyLocateSchedule"}, {"name": "suite", "value": "test_T1097854"}, {"name": "subSuite", "value": "Test_LocateScheduleCopy"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "263824-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.CopyLocateSchedule.test_T1097854"}]}