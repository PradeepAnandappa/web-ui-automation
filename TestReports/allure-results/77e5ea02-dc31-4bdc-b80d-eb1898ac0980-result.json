{"name": "test_user_signup", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <src.Tests.SmokeSanityTestSuite.Signup.test_T1097540.Test_Signup object at 0x000001BBFA1AB890>\n\n    @pytestrail.case('C31391')\n    def test_user_signup(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.click_TrailAccountLink()\n        self.signupPage = SignupPage(self.driver)\n        page_found = self.signupPage.getPageTitle(\"Free Trial\")\n        assert page_found\n        self.signupPage.close_chatpanel()\n        self.signupPage.signup_user(\"Test\", \"test qa\", \"8447760114\", \"test.allgeo@gmail.com\", \"GMT+05:30\")\n        time.sleep(2)\n>       actual_text = self.signupPage.get_ValidationAlertText()\n\nsrc\\Tests\\SmokeSanityTestSuite\\Signup\\test_T1097540.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\PageObjects\\Signup\\SignupPage.py:37: in get_ValidationAlertText\n    alert_text = self.get_alertText()\nsrc\\PageObjects\\BasePage\\BasePage.py:214: in get_alertText\n    alert = WebDriverWait(self.driver, 5).until(ec.alert_is_present())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"794051269f66717b948126dfba6942a0\")>\nmethod = <function alert_is_present.<locals>._predicate at 0x000001BBFAE8D800>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "start": 1713864733742, "stop": 1713864776105, "uuid": "2e72cc5d-8716-4fa9-8a09-f928297d85c0", "historyId": "75d052436a48d45571ce0fdc8eab3dbc", "testCaseId": "75d052436a48d45571ce0fdc8eab3dbc", "fullName": "src.Tests.SmokeSanityTestSuite.Signup.test_T1097540.Test_Signup#test_user_signup", "labels": [{"name": "tag", "value": "testrail(ids=('C31391',))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.Signup"}, {"name": "suite", "value": "test_T1097540"}, {"name": "subSuite", "value": "Test_Signup"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "279524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.Signup.test_T1097540"}]}