{"name": "test_addEmployee", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF620304D02+56194]\n\t(No symbol) [0x00007FF6202704B2]\n\t(No symbol) [0x00007FF6201176AA]\n\t(No symbol) [0x00007FF6201616D0]\n\t(No symbol) [0x00007FF6201617EC]\n\t(No symbol) [0x00007FF6201A4D77]\n\t(No symbol) [0x00007FF620185EBF]\n\t(No symbol) [0x00007FF6201A2786]\n\t(No symbol) [0x00007FF620185C23]\n\t(No symbol) [0x00007FF620154A45]\n\t(No symbol) [0x00007FF620155AD4]\n\tGetHandleVerifier [0x00007FF62067D5BB+3695675]\n\tGetHandleVerifier [0x00007FF6206D6197+4059159]\n\tGetHandleVerifier [0x00007FF6206CDF63+4025827]\n\tGetHandleVerifier [0x00007FF62039F029+687785]\n\t(No symbol) [0x00007FF62027B508]\n\t(No symbol) [0x00007FF620277564]\n\t(No symbol) [0x00007FF6202776E9]\n\t(No symbol) [0x00007FF620268094]\n\tBaseThreadInitThunk [0x00007FFE5D98257D+29]\n\tRtlUserThreadStart [0x00007FFE5F72AA58+40]", "trace": "self = <test_T1097067.Test_Company object at 0x0000024B9D7A2550>\n\n    @pytestrail.case('C25740')\n    def test_addEmployee(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        self.monitorPage = MonitorPage(self.driver)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.leftNavigationPanelPage = LeftNavigationPanelPage(self.driver)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage = EmployeesPage(self.driver)\n        self.employeesPage.click_Addnew()\n        time.sleep(2)\n        empName = self.employeesPage.generate_random_string(7)\n        empPhone = self.employeesPage.generate_random_phone_number()\n        self.employeesPage.populate_addEmployeeForm(empName, empPhone)\n        self.employeesPage.accept_termCheckbox()\n        self.employeesPage.click_Add()\n        assert self.employeesPage.validate_SuccessUpdateMessage(\"Successfully\")\n        time.sleep(2)\n        self.employeesPage.click_edit_for_employee(empPhone)\n        self.editEmployeesPage = EditEmployeesPage(self.driver)\n        assert self.editEmployeesPage.validateHeaderTitle()\n>       self.editEmployeesPage.get_selectedEmployeeType()\n\nsrc\\Tests\\SmokeSanityTestSuite\\Company\\Employees\\Device\\DeviceUI\\test_T1097067.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\PageObjects\\Company\\Employees\\MainView\\EmployeesCRUD_UI\\EditEmployeesPage.py:76: in get_selectedEmployeeType\n    return self.get_selectedValueinDropdown(self.EmployeeType)\nsrc\\PageObjects\\BasePage\\BasePage.py:171: in get_selectedValueinDropdown\n    element = WebDriverWait(self.driver, 10).until(ec.visibility_of_element_located(by_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"389b93cbb9fdf63d595debf4d6f51e9e\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000024B9DD777E0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF620304D02+56194]\nE       \t(No symbol) [0x00007FF6202704B2]\nE       \t(No symbol) [0x00007FF6201176AA]\nE       \t(No symbol) [0x00007FF6201616D0]\nE       \t(No symbol) [0x00007FF6201617EC]\nE       \t(No symbol) [0x00007FF6201A4D77]\nE       \t(No symbol) [0x00007FF620185EBF]\nE       \t(No symbol) [0x00007FF6201A2786]\nE       \t(No symbol) [0x00007FF620185C23]\nE       \t(No symbol) [0x00007FF620154A45]\nE       \t(No symbol) [0x00007FF620155AD4]\nE       \tGetHandleVerifier [0x00007FF62067D5BB+3695675]\nE       \tGetHandleVerifier [0x00007FF6206D6197+4059159]\nE       \tGetHandleVerifier [0x00007FF6206CDF63+4025827]\nE       \tGetHandleVerifier [0x00007FF62039F029+687785]\nE       \t(No symbol) [0x00007FF62027B508]\nE       \t(No symbol) [0x00007FF620277564]\nE       \t(No symbol) [0x00007FF6202776E9]\nE       \t(No symbol) [0x00007FF620268094]\nE       \tBaseThreadInitThunk [0x00007FFE5D98257D+29]\nE       \tRtlUserThreadStart [0x00007FFE5F72AA58+40]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "start": 1707112171328, "stop": 1707112221676, "uuid": "ad0dc272-bebd-4885-b057-7a733a78124e", "historyId": "88a11d434ed0d5f2abb43391b88767d8", "testCaseId": "88a11d434ed0d5f2abb43391b88767d8", "fullName": "src.Tests.SmokeSanityTestSuite.Company.Employees.Device.DeviceUI.test_T1097067.Test_Company#test_addEmployee", "labels": [{"name": "tag", "value": "testrail(ids=('C25740',))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.Company.Employees.Device.DeviceUI"}, {"name": "suite", "value": "test_T1097067"}, {"name": "subSuite", "value": "Test_Company"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "21556-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.Company.Employees.Device.DeviceUI.test_T1097067"}]}