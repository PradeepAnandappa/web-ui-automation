{"name": "test_addEmployee", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = <bound method EmployeesPage.check_ActionLink_disabled of <src.PageObjects.Company.Employees.MainView.EmployeesCRUD_UI.EmployeesPage.EmployeesPage object at 0x000001FF9BBE8E10>>('edit', '2013821')\n +    where <bound method EmployeesPage.check_ActionLink_disabled of <src.PageObjects.Company.Employees.MainView.EmployeesCRUD_UI.EmployeesPage.EmployeesPage object at 0x000001FF9BBE8E10>> = <src.PageObjects.Company.Employees.MainView.EmployeesCRUD_UI.EmployeesPage.EmployeesPage object at 0x000001FF9BBE8E10>.check_ActionLink_disabled\n +      where <src.PageObjects.Company.Employees.MainView.EmployeesCRUD_UI.EmployeesPage.EmployeesPage object at 0x000001FF9BBE8E10> = <test_T1097372.Test_Company object at 0x000001FF9A6AEED0>.employeesPage", "trace": "self = <test_T1097372.Test_Company object at 0x000001FF9A6AEED0>\n\n    @pytestrail.case('C29666', 'C29667', 'C29668')\n    def test_addEmployee(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        self.monitorPage = MonitorPage(self.driver)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        time.sleep(2)\n        self.monitorPage.switch_to_ChildAccount()\n        time.sleep(2)\n        self.leftNavigationPanelPage = LeftNavigationPanelPage(self.driver)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage = EmployeesPage(self.driver)\n        self.employeesPage.click_Addnew()\n        time.sleep(2)\n        empName = self.employeesPage.generate_random_string(7)\n        empPhone = self.employeesPage.generate_random_phone_number()\n        self.employeesPage.populate_addEmployeeForm(empName, empPhone)\n        self.employeesPage.accept_termCheckbox()\n        self.employeesPage.click_Add()\n        assert self.employeesPage.validate_SuccessUpdateMessage(\"Successfully\")\n        time.sleep(2)\n    \n        self.employeesPage.click_company_icon(\"Managers\")\n        self.managersPage = ManagersPage(self.driver)\n        self.managersPage.click_edit_for_ManagerID(\"m101\")\n        self.editManagersPage = EditManagersPage(self.driver)\n        self.editManagersPage.validateHeaderTitle()\n        time.sleep(2)\n        self.editManagersPage.set_ACL_for(\"Employee\", \"Edit\")\n        #self.editManagersPage.set_ACL_for(\"Employee\", \"Add\")\n        self.editManagersPage.click_saveBtn()\n        time.sleep(2)\n        self.editManagersPage.click_Cancel()\n        time.sleep(2)\n        self.managersPage.logout_user()\n        time.sleep(2)\n        self.loginPage.user_login(\"test-web-automation-child\", \"m101\", \"Test@123\")\n        time.sleep(2)\n        self.leftNavigationPanelPage.click_Company()\n        assert self.employeesPage.check_ActionLink_enabled(\"view\", empPhone)\n        assert self.employeesPage.check_ActionLink_enabled(\"edit\", empPhone)\n        assert self.employeesPage.check_ActionLink_disabled(\"delete\", empPhone)\n    \n        self.employeesPage.logout_user()\n        time.sleep(2)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.monitorPage.switch_to_ChildAccount()\n        time.sleep(2)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage.click_company_icon(\"Managers\")\n        self.managersPage.click_edit_for_ManagerID(\"m101\")\n        assert self.editManagersPage.validateHeaderTitle()\n        time.sleep(2)\n        #self.editManagersPage.set_ACL_for(\"Employee\", \"Edit\")\n        self.editManagersPage.set_ACL_for(\"Employee\", \"Add\")\n        self.editManagersPage.click_saveBtn()\n        time.sleep(2)\n        self.editManagersPage.click_Cancel()\n        time.sleep(2)\n        self.managersPage.logout_user()\n        time.sleep(2)\n        self.loginPage.user_login(\"test-web-automation-child\", \"m101\", \"Test@123\")\n        time.sleep(2)\n        self.leftNavigationPanelPage.click_Company()\n        assert self.employeesPage.check_ActionLink_enabled(\"view\", empPhone)\n        assert self.employeesPage.check_ActionLink_enabled(\"edit\", empPhone)\n        assert self.employeesPage.check_ActionLink_enabled(\"delete\", empPhone)\n    \n        self.employeesPage.logout_user()\n        time.sleep(2)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.monitorPage.switch_to_ChildAccount()\n        time.sleep(2)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage.click_company_icon(\"Managers\")\n        self.managersPage.click_edit_for_ManagerID(\"m101\")\n        assert self.editManagersPage.validateHeaderTitle()\n    \n        self.editManagersPage.set_ACL_for(\"Employee\", \"Add\")\n        time.sleep(2)\n        self.editManagersPage.set_ACL_for(\"Employee\", \"Edit\")\n        self.editManagersPage.click_saveBtn()\n        time.sleep(2)\n        self.editManagersPage.click_Cancel()\n        time.sleep(2)\n        self.managersPage.logout_user()\n        self.loginPage.user_login(\"test-web-automation-child\", \"m101\", \"Test@123\")\n        time.sleep(2)\n        self.leftNavigationPanelPage.click_Company()\n        assert self.employeesPage.check_ActionLink_enabled(\"view\", empPhone)\n>       assert self.employeesPage.check_ActionLink_disabled(\"edit\", empPhone)\nE       AssertionError: assert False\nE        +  where False = <bound method EmployeesPage.check_ActionLink_disabled of <src.PageObjects.Company.Employees.MainView.EmployeesCRUD_UI.EmployeesPage.EmployeesPage object at 0x000001FF9BBE8E10>>('edit', '2013821')\nE        +    where <bound method EmployeesPage.check_ActionLink_disabled of <src.PageObjects.Company.Employees.MainView.EmployeesCRUD_UI.EmployeesPage.EmployeesPage object at 0x000001FF9BBE8E10>> = <src.PageObjects.Company.Employees.MainView.EmployeesCRUD_UI.EmployeesPage.EmployeesPage object at 0x000001FF9BBE8E10>.check_ActionLink_disabled\nE        +      where <src.PageObjects.Company.Employees.MainView.EmployeesCRUD_UI.EmployeesPage.EmployeesPage object at 0x000001FF9BBE8E10> = <test_T1097372.Test_Company object at 0x000001FF9A6AEED0>.employeesPage\n\nsrc\\Tests\\SmokeSanityTestSuite\\ACL_Impact\\SubmitGreyedOutButtonACLPermission\\test_T1097372.py:112: AssertionError"}, "start": 1705417713662, "stop": 1705418043136, "uuid": "6cea3f80-18db-48ed-9803-c53814fbbeb2", "historyId": "376bc1e55cc7c90fb5f40e8f91576d5b", "testCaseId": "376bc1e55cc7c90fb5f40e8f91576d5b", "fullName": "src.Tests.SmokeSanityTestSuite.ACL_Impact.SubmitGreyedOutButtonACLPermission.test_T1097372.Test_Company#test_addEmployee", "labels": [{"name": "tag", "value": "testrail(ids=('C29666', 'C29667', 'C29668'))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.ACL_Impact.SubmitGreyedOutButtonACLPermission"}, {"name": "suite", "value": "test_T1097372"}, {"name": "subSuite", "value": "Test_Company"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "14020-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.ACL_Impact.SubmitGreyedOutButtonACLPermission.test_T1097372"}]}