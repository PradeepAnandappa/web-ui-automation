{"name": "test_GroupsUI", "status": "failed", "statusDetails": {"message": "AssertionError: assert '2024/02/05' == '2025/02/05'\n  - 2025/02/05\n  ?    ^\n  + 2024/02/05\n  ?    ^", "trace": "self = <test_T1097756.Test_Groups object at 0x0000024B9DB35890>\n\n    @pytestrail.case('C32950')\n    def test_GroupsUI(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        self.monitorPage = MonitorPage(self.driver)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.leftNavigationPanelPage = LeftNavigationPanelPage(self.driver)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage = EmployeesPage(self.driver)\n        time.sleep(5)\n        page_found = self.employeesPage.getPageTitle(\"Employees\")\n        assert page_found\n        self.employeesPage.click_company_icon(\"Settings\")\n        self.settingsPage = SettingsPage(self.driver)\n        time.sleep(5)\n        page_found = self.settingsPage.getPageTitle(\"Settings\")\n        assert page_found\n        date_format = self.settingsPage.get_selected_Date_format()\n        date_format = date_format.upper()\n        print(\"Date format: \"+date_format)\n        time.sleep(2)\n        self.leftNavigationPanelPage.click_Monitor()\n        self.monitorPage.click_TrackingSchedularTab()\n        time.sleep(2)\n        self.trackingSchedulerPage = TrackingSchedulerPage(self.driver)\n        self.trackingSchedulerPage.click_AddNew()\n        self.addEditTrackingSchedulePage = AddEditTrackingSchedulePage(self.driver)\n        endDate = self.addEditTrackingSchedulePage.get_EndDate()\n        print(\"Actual:\" + endDate)\n        expected = arrow.now().shift(days=366).format(date_format)\n        print(\"Expected:\"+expected)\n>       assert endDate == expected\nE       AssertionError: assert '2024/02/05' == '2025/02/05'\nE         - 2025/02/05\nE         ?    ^\nE         + 2024/02/05\nE         ?    ^\n\nsrc\\Tests\\SmokeSanityTestSuite\\Monitor\\TrackingScheduler\\TrackingScheduleUI\\AddNonRecurringScheduler\\test_T1097756.py:53: AssertionError"}, "start": 1707123524291, "stop": 1707123568523, "uuid": "7b4bf061-39f4-476b-bad7-699f735fab45", "historyId": "5c2122e527f751ff64677a7b5283a22a", "testCaseId": "5c2122e527f751ff64677a7b5283a22a", "fullName": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.AddNonRecurringScheduler.test_T1097756.Test_Groups#test_GroupsUI", "labels": [{"name": "tag", "value": "testrail(ids=('C32950',))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.AddNonRecurringScheduler"}, {"name": "suite", "value": "test_T1097756"}, {"name": "subSuite", "value": "Test_Groups"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "21556-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.AddNonRecurringScheduler.test_T1097756"}]}