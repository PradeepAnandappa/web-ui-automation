{"name": "test_addEmployee", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'Test Desc' == 'YdNegRD'\n  - YdNegRD\n  + Test Desc", "trace": "self = <test_T1097024.Test_Company object at 0x0000022978ADAED0>\n\n    @pytestrail.case('C25633', 'C25634')\n    def test_addEmployee(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        self.monitorPage = MonitorPage(self.driver)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.leftNavigationPanelPage = LeftNavigationPanelPage(self.driver)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage = EmployeesPage(self.driver)\n        self.employeesPage.click_Addnew()\n        time.sleep(2)\n        empName = self.employeesPage.generate_random_string(7)\n        empPhone = self.employeesPage.generate_random_phone_number()\n        self.employeesPage.populate_addEmployeeForm(empName, empPhone)\n        self.employeesPage.accept_termCheckbox()\n        self.employeesPage.click_Add()\n        assert self.employeesPage.validate_SuccessUpdateMessage(\"Successfully\")\n        time.sleep(2)\n        self.employeesPage.click_edit_for_employee(empPhone)\n        time.sleep(1)\n        self.editEmployeesPage = EditEmployeesPage(self.driver)\n        assert self.editEmployeesPage.validateHeaderTitle()\n        assert self.editEmployeesPage.getEmployeeFirstName() == self.editEmployeesPage.getEmployeeDescription()\n        EmpDesc =\"Test Desc\"\n        self.editEmployeesPage.setEmployeeDescription(EmpDesc)\n        self.editEmployeesPage.click_Save()\n>       assert EmpDesc == self.editEmployeesPage.getEmployeeDescription()\nE       AssertionError: assert 'Test Desc' == 'YdNegRD'\nE         - YdNegRD\nE         + Test Desc\n\nsrc\\Tests\\SmokeSanityTestSuite\\Company\\Employees\\General\\GeneralUI\\test_T1097024.py:41: AssertionError"}, "start": 1713936464963, "stop": 1713936496052, "uuid": "46bb19d4-4564-4252-b286-53e0cdedcd6a", "historyId": "4c3112b089966e5425b89f8c8c6a8f18", "testCaseId": "4c3112b089966e5425b89f8c8c6a8f18", "fullName": "src.Tests.SmokeSanityTestSuite.Company.Employees.General.GeneralUI.test_T1097024.Test_Company#test_addEmployee", "labels": [{"name": "tag", "value": "testrail(ids=('C25633', 'C25634'))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.Company.Employees.General.GeneralUI"}, {"name": "suite", "value": "test_T1097024"}, {"name": "subSuite", "value": "Test_Company"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "336072-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.Company.Employees.General.GeneralUI.test_T1097024"}]}