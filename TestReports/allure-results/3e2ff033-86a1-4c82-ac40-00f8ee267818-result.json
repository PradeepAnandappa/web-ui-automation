{"name": "test_GroupsUI", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF7A3517032+63090]\n\t(No symbol) [0x00007FF7A3482C82]\n\t(No symbol) [0x00007FF7A331EC65]\n\t(No symbol) [0x00007FF7A336499D]\n\t(No symbol) [0x00007FF7A3364ADC]\n\t(No symbol) [0x00007FF7A33A5B37]\n\t(No symbol) [0x00007FF7A338701F]\n\t(No symbol) [0x00007FF7A33A3412]\n\t(No symbol) [0x00007FF7A3386D83]\n\t(No symbol) [0x00007FF7A33583A8]\n\t(No symbol) [0x00007FF7A3359441]\n\tGetHandleVerifier [0x00007FF7A39125AD+4238317]\n\tGetHandleVerifier [0x00007FF7A394F70D+4488525]\n\tGetHandleVerifier [0x00007FF7A39479EF+4456495]\n\tGetHandleVerifier [0x00007FF7A35F0576+953270]\n\t(No symbol) [0x00007FF7A348E54F]\n\t(No symbol) [0x00007FF7A3489224]\n\t(No symbol) [0x00007FF7A348935B]\n\t(No symbol) [0x00007FF7A3479B94]\n\tBaseThreadInitThunk [0x00007FF802F4257D+29]\n\tRtlUserThreadStart [0x00007FF80460AA58+40]", "trace": "self = <test_T1097823.Test_Groups object at 0x000001D7FF74BD50>\n\n    @pytestrail.case('C33058')\n    def test_GroupsUI(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        self.monitorPage = MonitorPage(self.driver)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n    \n        self.monitorPage.click_TrackingSchedularTab()\n        time.sleep(2)\n        page_URL = self.monitorPage.getPageURL()\n        Expected_URL = config.baseURL + \"/monitor/locate-schedule\"\n        assert Expected_URL == page_URL\n        self.trackingSchedulerPage = TrackingSchedulerPage(self.driver)\n        self.trackingSchedulerPage.click_AddNew()\n        self.addEditTrackingSchedulePage = AddEditTrackingSchedulePage(self.driver)\n        scheduleName = self.addEditTrackingSchedulePage.generate_random_string(5)+\"101\"\n        self.addEditTrackingSchedulePage.enter_ScheduleName(scheduleName)\n        self.addEditTrackingSchedulePage.set_repeat(\"Weekly\")\n        time.sleep(2)\n        self.addEditTrackingSchedulePage.select_weekly_day(\"Mon\")\n        self.addEditTrackingSchedulePage.select_Manual()\n        time.sleep(1)\n        self.addEditTrackingSchedulePage.click_Done()\n        self.trackingSchedulerPage.validate_SuccessUpdateMessage(\"successfully\")\n        self.trackingSchedulerPage.edit_schedule(scheduleName)\n        timezone =\"US/Central\"\n>       self.addEditTrackingSchedulePage.set_timeZone(timezone)\n\nsrc\\Tests\\SmokeSanityTestSuite\\Monitor\\TrackingScheduler\\TrackingScheduleUI\\EditRecurringScheduler\\test_T1097823.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\PageObjects\\Monitor\\TrackingScheduler\\TrackingScheduleUI\\LocateScheduleMainView\\AddEditTrackingSchedulePage.py:76: in set_timeZone\n    self.selectDropdownValueByText(self.TimeZone_dropdown, value)\nsrc\\PageObjects\\BasePage\\BasePage.py:165: in selectDropdownValueByText\n    element = WebDriverWait(self.driver, 10).until(ec.visibility_of_element_located(by_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a2c19171aa486a2db961256815ff1bfd\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001D7FFF4DC60>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7A3517032+63090]\nE       \t(No symbol) [0x00007FF7A3482C82]\nE       \t(No symbol) [0x00007FF7A331EC65]\nE       \t(No symbol) [0x00007FF7A336499D]\nE       \t(No symbol) [0x00007FF7A3364ADC]\nE       \t(No symbol) [0x00007FF7A33A5B37]\nE       \t(No symbol) [0x00007FF7A338701F]\nE       \t(No symbol) [0x00007FF7A33A3412]\nE       \t(No symbol) [0x00007FF7A3386D83]\nE       \t(No symbol) [0x00007FF7A33583A8]\nE       \t(No symbol) [0x00007FF7A3359441]\nE       \tGetHandleVerifier [0x00007FF7A39125AD+4238317]\nE       \tGetHandleVerifier [0x00007FF7A394F70D+4488525]\nE       \tGetHandleVerifier [0x00007FF7A39479EF+4456495]\nE       \tGetHandleVerifier [0x00007FF7A35F0576+953270]\nE       \t(No symbol) [0x00007FF7A348E54F]\nE       \t(No symbol) [0x00007FF7A3489224]\nE       \t(No symbol) [0x00007FF7A348935B]\nE       \t(No symbol) [0x00007FF7A3479B94]\nE       \tBaseThreadInitThunk [0x00007FF802F4257D+29]\nE       \tRtlUserThreadStart [0x00007FF80460AA58+40]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "start": 1713347998105, "stop": 1713348094103, "uuid": "574c4909-8b4a-4b80-b9b9-ddc3ac4e6a02", "historyId": "eeac975ceaf706f53a2817e506a407d1", "testCaseId": "eeac975ceaf706f53a2817e506a407d1", "fullName": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.EditRecurringScheduler.test_T1097823.Test_Groups#test_GroupsUI", "labels": [{"name": "tag", "value": "testrail(ids=('C33058',))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.EditRecurringScheduler"}, {"name": "suite", "value": "test_T1097823"}, {"name": "subSuite", "value": "Test_Groups"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "263824-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.EditRecurringScheduler.test_T1097823"}]}