{"name": "test_ACLPermission", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = <bound method EditManagersPage.validateHeaderTitle of <src.PageObjects.Company.Managers.ManagerUI.EditManagerGroupAuthorization.EditManagersPage.EditManagersPage object at 0x00000229795D2F10>>()\n +    where <bound method EditManagersPage.validateHeaderTitle of <src.PageObjects.Company.Managers.ManagerUI.EditManagerGroupAuthorization.EditManagersPage.EditManagersPage object at 0x00000229795D2F10>> = <src.PageObjects.Company.Managers.ManagerUI.EditManagerGroupAuthorization.EditManagersPage.EditManagersPage object at 0x00000229795D2F10>.validateHeaderTitle\n +      where <src.PageObjects.Company.Managers.ManagerUI.EditManagerGroupAuthorization.EditManagersPage.EditManagersPage object at 0x00000229795D2F10> = <test_T1536433.Test_Schedule object at 0x0000022978A7B110>.editManagersPage", "trace": "self = <test_T1536433.Test_Schedule object at 0x0000022978A7B110>\n\n    @pytestrail.case('C38777')\n    def test_ACLPermission(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        self.monitorPage = MonitorPage(self.driver)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.monitorPage.switch_to_ChildAccount()\n        time.sleep(2)\n        self.leftNavigationPanelPage = LeftNavigationPanelPage(self.driver)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage = EmployeesPage(self.driver)\n        self.employeesPage.click_company_icon(\"Managers\")\n        self.managersPage = ManagersPage(self.driver)\n        self.managersPage.click_edit_for_ManagerID(\"m101\")\n        self.editManagersPage = EditManagersPage(self.driver)\n>       assert self.editManagersPage.validateHeaderTitle()\nE       assert False\nE        +  where False = <bound method EditManagersPage.validateHeaderTitle of <src.PageObjects.Company.Managers.ManagerUI.EditManagerGroupAuthorization.EditManagersPage.EditManagersPage object at 0x00000229795D2F10>>()\nE        +    where <bound method EditManagersPage.validateHeaderTitle of <src.PageObjects.Company.Managers.ManagerUI.EditManagerGroupAuthorization.EditManagersPage.EditManagersPage object at 0x00000229795D2F10>> = <src.PageObjects.Company.Managers.ManagerUI.EditManagerGroupAuthorization.EditManagersPage.EditManagersPage object at 0x00000229795D2F10>.validateHeaderTitle\nE        +      where <src.PageObjects.Company.Managers.ManagerUI.EditManagerGroupAuthorization.EditManagersPage.EditManagersPage object at 0x00000229795D2F10> = <test_T1536433.Test_Schedule object at 0x0000022978A7B110>.editManagersPage\n\nsrc\\Tests\\SmokeSanityTestSuite\\ACL_Impact\\SubmitGreyedOutButtonACLPermission\\test_T1536433.py:39: AssertionError"}, "start": 1713935550838, "stop": 1713935687568, "uuid": "1eda069d-a3ca-46c8-a0c6-1c6b416f629b", "historyId": "35106ebd98b6f2cb6005038a7e52b201", "testCaseId": "35106ebd98b6f2cb6005038a7e52b201", "fullName": "src.Tests.SmokeSanityTestSuite.ACL_Impact.SubmitGreyedOutButtonACLPermission.test_T1536433.Test_Schedule#test_ACLPermission", "labels": [{"name": "tag", "value": "testrail(ids=('C38777',))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.ACL_Impact.SubmitGreyedOutButtonACLPermission"}, {"name": "suite", "value": "test_T1536433"}, {"name": "subSuite", "value": "Test_Schedule"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "336072-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.ACL_Impact.SubmitGreyedOutButtonACLPermission.test_T1536433"}]}