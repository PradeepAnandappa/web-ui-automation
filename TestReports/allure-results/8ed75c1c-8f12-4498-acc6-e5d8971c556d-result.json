{"name": "test_GroupsUI", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'https://www....cate-schedule' == 'https://www....tor-employees'\n  - https://www.allgeo.com/ngui/monitor/monitor-employees\n  ?                                     -----------  ^  ^\n  + https://www.allgeo.com/ngui/monitor/locate-schedule\n  ?                                       ^^^ ++++ ^^^^", "trace": "self = <test_T1097763.Test_Groups object at 0x0000024B9DB428D0>\n\n    @pytestrail.case('C32959')\n    def test_GroupsUI(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        self.monitorPage = MonitorPage(self.driver)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.leftNavigationPanelPage = LeftNavigationPanelPage(self.driver)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage = EmployeesPage(self.driver)\n        time.sleep(5)\n        page_found = self.employeesPage.getPageTitle(\"Employees\")\n        assert page_found\n        self.employeesPage.click_company_icon(\"Groups\")\n        self.groupsPage = GroupsPage(self.driver)\n        time.sleep(5)\n        page_found = self.groupsPage.get_page_title(\"Groups\")\n        assert page_found\n        self.groupsPage.click_AddNew()\n        self.addEditGroupPage = AddEditGroupPage(self.driver)\n        assert self.addEditGroupPage.validate_Add_Group_Modal()\n        groupId = self.addEditGroupPage.generate_random_string(5)+\"02\"\n        groupName = self.addEditGroupPage.generate_random_string(5)\n        self.addEditGroupPage.add_group(groupId, groupName)\n        assert self.addEditGroupPage.validate_SuccessUpdateMessage(\"successfully\")\n        self.leftNavigationPanelPage.click_Monitor()\n        self.monitorPage.click_TrackingSchedularTab()\n        time.sleep(2)\n        page_URL = self.monitorPage.getPageURL()\n        Expected_URL = config.baseURL + \"/ngui/monitor/locate-schedule\"\n>       assert Expected_URL == page_URL\nE       AssertionError: assert 'https://www....cate-schedule' == 'https://www....tor-employees'\nE         - https://www.allgeo.com/ngui/monitor/monitor-employees\nE         ?                                     -----------  ^  ^\nE         + https://www.allgeo.com/ngui/monitor/locate-schedule\nE         ?                                       ^^^ ++++ ^^^^\n\nsrc\\Tests\\SmokeSanityTestSuite\\Monitor\\TrackingScheduler\\TrackingScheduleUI\\AddNonRecurringScheduler\\test_T1097763.py:49: AssertionError"}, "start": 1707123995972, "stop": 1707124037913, "uuid": "3e335c2f-8060-4164-8639-ca19b5ace55f", "historyId": "03058b7e7b04e48082e7ea4d741eaf3a", "testCaseId": "03058b7e7b04e48082e7ea4d741eaf3a", "fullName": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.AddNonRecurringScheduler.test_T1097763.Test_Groups#test_GroupsUI", "labels": [{"name": "tag", "value": "testrail(ids=('C32959',))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.AddNonRecurringScheduler"}, {"name": "suite", "value": "test_T1097763"}, {"name": "subSuite", "value": "Test_Groups"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "21556-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.AddNonRecurringScheduler.test_T1097763"}]}