{"name": "test_addForms", "status": "broken", "statusDetails": {"message": "TypeError: argument of type 'NoneType' is not iterable", "trace": "self = <test_T1097334.Test_Company object at 0x000001BBF9D83450>\n\n    @pytestrail.case('C28025', 'C28027', 'C28041', 'C28067', 'C28068', 'C28069')\n    def test_addForms(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        self.monitorPage = MonitorPage(self.driver)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.leftNavigationPanelPage = LeftNavigationPanelPage(self.driver)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage = EmployeesPage(self.driver)\n        time.sleep(2)\n        self.employeesPage.click_company_icon(\"Forms\")\n        self.formsPage = FormsPage(self.driver)\n        self.formsPage.click_Addnew()\n        self.formsPage.enterFormName(\"LoginForm\")\n        assert self.formsPage.check_AddButton_disabled()\n        file_path = str(Path.home()) + \"\\PycharmProjects\\/allGeo_webApp\\src\\Resources\\LoginForm.html\"\n        self.formsPage.uploadHTML(file_path)\n        time.sleep(2)\n        assert self.formsPage.check_AddButton_enabled()\n        self.formsPage.click_Add()\n>       assert self.formsPage.validate_SuccessUpdateMessage(\"successfully\")\n\nsrc\\Tests\\SmokeSanityTestSuite\\Company\\Forms\\FormsUI\\EditForm\\test_T1097334.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <src.PageObjects.Company.Forms.FormsUI.AddForm.FormsPage.FormsPage object at 0x000001BBFA7D1090>, value = 'successfully'\n\n    def validate_SuccessUpdateMessage(self, value):\n        flag = bool(False)\n        actual = self.getElementText(self.SuccessFloatingMSG)\n>       if value in actual:\nE       TypeError: argument of type 'NoneType' is not iterable\n\nsrc\\PageObjects\\Company\\Forms\\FormsUI\\AddForm\\FormsPage.py:202: TypeError"}, "start": 1713852423276, "stop": 1713852444494, "uuid": "b0df7d2c-1a33-4cb7-b692-c76f18b10510", "historyId": "1fc0c466c4d7897b9f07b3c0192d4592", "testCaseId": "1fc0c466c4d7897b9f07b3c0192d4592", "fullName": "src.Tests.SmokeSanityTestSuite.Company.Forms.FormsUI.EditForm.test_T1097334.Test_Company#test_addForms", "labels": [{"name": "tag", "value": "testrail(ids=('C28025', 'C28027', 'C28041', 'C28067', 'C28068', 'C28069'))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.Company.Forms.FormsUI.EditForm"}, {"name": "suite", "value": "test_T1097334"}, {"name": "subSuite", "value": "Test_Company"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "279524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.Company.Forms.FormsUI.EditForm.test_T1097334"}]}