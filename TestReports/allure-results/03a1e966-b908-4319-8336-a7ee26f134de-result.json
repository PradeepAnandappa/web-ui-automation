{"name": "test_addEmployee", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'https://www....cate-schedule' == 'https://www....tor-employees'\n  - https://www.allgeo.com/ngui/monitor/monitor-employees\n  ?                                     -----------  ^  ^\n  + https://www.allgeo.com/ngui/monitor/locate-schedule\n  ?                                       ^^^ ++++ ^^^^", "trace": "self = <test_T1097393.Test_Company object at 0x000001FF9B6AF490>\n\n    @pytestrail.case('C29689', 'C29690', 'C29691', 'C29692')\n    def test_addEmployee(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        self.monitorPage = MonitorPage(self.driver)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.monitorPage.switch_to_ChildAccount()\n        time.sleep(2)\n        self.monitorPage.click_TrackingSchedularTab()\n        self.trackingSchedulerPage = TrackingSchedulerPage(self.driver)\n        page_URL = self.trackingSchedulerPage.getPageURL()\n        Expected_URL = config.baseURL + \"/ngui/monitor/locate-schedule\"\n        assert Expected_URL == page_URL\n        self.trackingSchedulerPage.click_AddNew()\n        self.addEditTrackingSchedulePage = AddEditTrackingSchedulePage(self.driver)\n        flag = self.addEditTrackingSchedulePage.validate_AddNewTrackingScheduleModal()\n        assert flag\n        scheduleName = ''.join(random.choices(string.ascii_letters, k=7))\n        self.addEditTrackingSchedulePage.addTrackingSchedule(scheduleName)\n        time.sleep(2)\n        self.leftNavigationPanelPage = LeftNavigationPanelPage(self.driver)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage = EmployeesPage(self.driver)\n        time.sleep(5)\n        page_found = self.employeesPage.getPageTitle(\"Employees\")\n        assert page_found\n        self.employeesPage.click_company_icon(\"Managers\")\n        self.managersPage = ManagersPage(self.driver)\n        self.managersPage.click_edit_for_ManagerID(\"m101\")\n        self.editManagersPage = EditManagersPage(self.driver)\n        self.editManagersPage.validateHeaderTitle()\n        time.sleep(2)\n        self.editManagersPage.set_ACL_for(\"Schedule\", \"Edit\")\n        self.editManagersPage.click_saveBtn()\n        time.sleep(2)\n        self.editManagersPage.click_Cancel()\n        time.sleep(2)\n        self.managersPage.logout_user()\n        time.sleep(2)\n        self.loginPage.user_login(\"test-web-automation-child\", \"m101\", \"Test@123\")\n        time.sleep(2)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.monitorPage.click_TrackingSchedularTab()\n        page_URL = self.monitorPage.getPageURL()\n        Expected_URL = config.baseURL + \"/ngui/monitor/locate-schedule\"\n        assert Expected_URL == page_URL\n        assert self.trackingSchedulerPage.check_ActionLink_enabled(\"edit\", scheduleName)\n        assert self.trackingSchedulerPage.check_ActionLink_enabled(\"view\", scheduleName)\n        assert self.trackingSchedulerPage.check_ActionLink_disabled(\"delete\", scheduleName)\n        self.trackingSchedulerPage.logout_user()\n        time.sleep(2)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.monitorPage.switch_to_ChildAccount()\n        time.sleep(2)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage.click_company_icon(\"Managers\")\n        self.managersPage.click_edit_for_ManagerID(\"m101\")\n        assert self.editManagersPage.validateHeaderTitle()\n        time.sleep(2)\n        self.editManagersPage.set_ACL_for(\"Schedule\", \"Add\")\n        self.editManagersPage.click_saveBtn()\n        time.sleep(2)\n        self.editManagersPage.click_Cancel()\n        time.sleep(2)\n        self.managersPage.logout_user()\n        time.sleep(2)\n        self.loginPage.user_login(\"test-web-automation-child\", \"m101\", \"Test@123\")\n        time.sleep(2)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.monitorPage.click_TrackingSchedularTab()\n        page_URL = self.monitorPage.getPageURL()\n        Expected_URL = config.baseURL + \"/ngui/monitor/locate-schedule\"\n>       assert Expected_URL == page_URL\nE       AssertionError: assert 'https://www....cate-schedule' == 'https://www....tor-employees'\nE         - https://www.allgeo.com/ngui/monitor/monitor-employees\nE         ?                                     -----------  ^  ^\nE         + https://www.allgeo.com/ngui/monitor/locate-schedule\nE         ?                                       ^^^ ++++ ^^^^\n\nsrc\\Tests\\SmokeSanityTestSuite\\ACL_Impact\\SubmitGreyedOutButtonACLPermission\\test_T1097393.py:105: AssertionError"}, "start": 1705418796839, "stop": 1705418985596, "uuid": "64ed4bd1-2f6b-4f1f-888e-713d08df120b", "historyId": "8c8ca580385a9b1602dfe66cb4f0b4c2", "testCaseId": "8c8ca580385a9b1602dfe66cb4f0b4c2", "fullName": "src.Tests.SmokeSanityTestSuite.ACL_Impact.SubmitGreyedOutButtonACLPermission.test_T1097393.Test_Company#test_addEmployee", "labels": [{"name": "tag", "value": "testrail(ids=('C29689', 'C29690', 'C29691', 'C29692'))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.ACL_Impact.SubmitGreyedOutButtonACLPermission"}, {"name": "suite", "value": "test_T1097393"}, {"name": "subSuite", "value": "Test_Company"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "14020-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.ACL_Impact.SubmitGreyedOutButtonACLPermission.test_T1097393"}]}