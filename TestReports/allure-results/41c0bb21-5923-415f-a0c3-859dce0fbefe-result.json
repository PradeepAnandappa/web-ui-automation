{"name": "test_addEmployee", "status": "broken", "statusDetails": {"message": "TypeError: WebDriver.__init__() got an unexpected keyword argument 'executable_path'", "trace": "request = <SubRequest 'setup_driver' for <Function test_addEmployee>>, getBrowser = 'chrome', getEnvironment = 'production'\n\n    @pytest.fixture\n    def setup_driver(request, getBrowser, getEnvironment):\n        if getBrowser == \"chrome\":\n           #web_driver = webdriver.Chrome(executable_path=config.chromeDriver)\n            chromeOptions = webdriver.ChromeOptions()\n            file_path = str(Path.home()) + \"\\\\PycharmProjects\\\\allgeo_web_app_pro\\\\src\\\\Resources\\\\Download\"\n            print(\"download directory: \"+file_path)\n    \n            chromeOptions.add_argument(\"--window-size=1920,1080\")\n            chromeOptions.add_argument(\"--disable-extensions\")\n            chromeOptions.add_argument(\"--proxy-server='direct://'\")\n            chromeOptions.add_argument(\"--proxy-bypass-list=*\")\n            chromeOptions.add_argument(\"--start-maximized\")\n            chromeOptions.add_argument('--headless')\n            chromeOptions.add_argument('--disable-gpu')\n            chromeOptions.add_argument('--disable-dev-shm-usage')\n            chromeOptions.add_argument('--no-sandbox')\n            chromeOptions.add_argument('--ignore-certificate-errors')\n            prefs = {\"download.default_directory\": file_path, \"profile.default_content_setting_values.automatic_downloads\": 1}\n            chromeOptions.add_experimental_option(\"prefs\", prefs)\n>           web_driver = webdriver.Chrome(executable_path=config.chromeDriver, options=chromeOptions)\nE           TypeError: WebDriver.__init__() got an unexpected keyword argument 'executable_path'\n\nconftest.py:57: TypeError"}, "start": 1712747752249, "stop": 1712747752249, "uuid": "dbe4ad34-dfad-42ea-aea7-7512fd16354d", "historyId": "ff9e992f9549000f931b83201c2eabc6", "testCaseId": "ff9e992f9549000f931b83201c2eabc6", "fullName": "src.Tests.SmokeSanityTestSuite.Company.Employees.MainView.EmployeesCRUD_UI.test_T1097915.Test_Company#test_addEmployee", "labels": [{"name": "tag", "value": "testrail(ids=('C34794',))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.Company.Employees.MainView.EmployeesCRUD_UI"}, {"name": "suite", "value": "test_T1097915"}, {"name": "subSuite", "value": "Test_Company"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "207484-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.Company.Employees.MainView.EmployeesCRUD_UI.test_T1097915"}]}