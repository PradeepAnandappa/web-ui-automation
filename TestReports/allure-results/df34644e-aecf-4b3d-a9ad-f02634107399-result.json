{"name": "test_PrivacySecuritySettingsUI", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <test_T1096995.Test_PrivacySecuritySettings object at 0x0000024B9D912790>\n\n    @pytestrail.case('C25294', 'C25295', 'C25296', 'C25298', 'C25315', 'C25311')\n    def test_PrivacySecuritySettingsUI(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        self.monitorPage = MonitorPage(self.driver)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.leftNavigationPanelPage = LeftNavigationPanelPage(self.driver)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage = EmployeesPage(self.driver)\n        time.sleep(5)\n        page_found = self.employeesPage.getPageTitle(\"Employees\")\n        assert page_found\n        self.employeesPage.click_company_icon(\"Settings\")\n        self.settingsPage = SettingsPage(self.driver)\n        time.sleep(5)\n        page_found = self.settingsPage.getPageTitle(\"Settings\")\n        assert page_found\n        self.settingsPage.click_settings_tab(\"Security & Privacy\")\n        time.sleep(5)\n        self.privacySecuritySettingsPage = PrivacySecuritySettingsPage(self.driver)\n        assert self.privacySecuritySettingsPage.validate_pageHeader()\n        self.privacySecuritySettingsPage.click_settings_tab(\"Legacy\")\n        self.privacySecuritySettingsPage.check_SettingTab_Highlited(\"Legacy\")\n    \n        self.privacySecuritySettingsPage.select_TwofactorToggle()\n        flag = self.privacySecuritySettingsPage.validate_TwoFactorEnable_Modals()\n>       assert flag\nE       assert False\n\nsrc\\Tests\\SmokeSanityTestSuite\\Company\\Settings\\PrivacySecurity\\PrivacySecurityUI\\test_T1096995.py:43: AssertionError"}, "start": 1707119339563, "stop": 1707119420151, "uuid": "52a4b603-a91a-44b7-b4cd-c4b9cc2fe8c5", "historyId": "299e2fb4beb583144a7a1a6c3285c08d", "testCaseId": "299e2fb4beb583144a7a1a6c3285c08d", "fullName": "src.Tests.SmokeSanityTestSuite.Company.Settings.PrivacySecurity.PrivacySecurityUI.test_T1096995.Test_PrivacySecuritySettings#test_PrivacySecuritySettingsUI", "labels": [{"name": "tag", "value": "testrail(ids=('C25294', 'C25295', 'C25296', 'C25298', 'C25315', 'C25311'))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.Company.Settings.PrivacySecurity.PrivacySecurityUI"}, {"name": "suite", "value": "test_T1096995"}, {"name": "subSuite", "value": "Test_PrivacySecuritySettings"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "21556-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.Company.Settings.PrivacySecurity.PrivacySecurityUI.test_T1096995"}]}