{"name": "test_viewEmployee", "status": "broken", "statusDetails": {"message": "TypeError: WebDriver.__init__() got an unexpected keyword argument 'executable_path'", "trace": "request = <SubRequest 'setup_driver' for <Function test_viewEmployee>>, getBrowser = 'chrome', getEnvironment = 'production'\n\n    @pytest.fixture\n    def setup_driver(request, getBrowser, getEnvironment):\n        if getBrowser == \"chrome\":\n           #web_driver = webdriver.Chrome(executable_path=config.chromeDriver)\n            chromeOptions = webdriver.ChromeOptions()\n            file_path = str(Path.home()) + \"\\\\PycharmProjects\\\\allGeo_webApp\\\\src\\\\Resources\\\\Download\"\n            print(\"download directory: \"+file_path)\n    \n            chromeOptions.add_argument(\"--window-size=1920,1080\")\n            chromeOptions.add_argument(\"--disable-extensions\")\n            chromeOptions.add_argument(\"--proxy-server='direct://'\")\n            chromeOptions.add_argument(\"--proxy-bypass-list=*\")\n            chromeOptions.add_argument(\"--start-maximized\")\n            chromeOptions.add_argument('--headless')\n            chromeOptions.add_argument('--disable-gpu')\n            chromeOptions.add_argument('--disable-dev-shm-usage')\n            chromeOptions.add_argument('--no-sandbox')\n            chromeOptions.add_argument('--ignore-certificate-errors')\n            prefs = {\"download.default_directory\": file_path, \"profile.default_content_setting_values.automatic_downloads\": 1}\n            chromeOptions.add_experimental_option(\"prefs\", prefs)\n>           web_driver = webdriver.Chrome(executable_path=config.chromeDriver, options=chromeOptions)\nE           TypeError: WebDriver.__init__() got an unexpected keyword argument 'executable_path'\n\nconftest.py:57: TypeError"}, "start": 1712747466683, "stop": 1712747466683, "uuid": "7c0b9649-3ede-4171-957b-7afe80a21c7a", "historyId": "11b7d94784e5374b0e4d8f0830c0e0b2", "testCaseId": "11b7d94784e5374b0e4d8f0830c0e0b2", "fullName": "src.Tests.SmokeSanityTestSuite.Company.Employees.MainView.EmployeesCRUD_UI.test_T1097898.Test_Company#test_viewEmployee", "labels": [{"name": "tag", "value": "testrail(ids=('C34870', 'C34873', 'C34874', 'C34776', 'C34876', 'C34777', 'C34787', 'C34779', 'C34782', 'C34886', 'C34801', 'C34860'))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.Company.Employees.MainView.EmployeesCRUD_UI"}, {"name": "suite", "value": "test_T1097898"}, {"name": "subSuite", "value": "Test_Company"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "203760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.Company.Employees.MainView.EmployeesCRUD_UI.test_T1097898"}]}