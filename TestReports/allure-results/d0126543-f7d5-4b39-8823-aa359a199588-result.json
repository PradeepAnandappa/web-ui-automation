{"name": "test_addJobSite", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = <bound method UploadHubPage.validate_PageHeader of <src.PageObjects.Company.Tools.UploadHubUI.UploadHubPage.UploadHubPage object at 0x0000024B9E4F3E50>>()\n +    where <bound method UploadHubPage.validate_PageHeader of <src.PageObjects.Company.Tools.UploadHubUI.UploadHubPage.UploadHubPage object at 0x0000024B9E4F3E50>> = <src.PageObjects.Company.Tools.UploadHubUI.UploadHubPage.UploadHubPage object at 0x0000024B9E4F3E50>.validate_PageHeader\n +      where <src.PageObjects.Company.Tools.UploadHubUI.UploadHubPage.UploadHubPage object at 0x0000024B9E4F3E50> = <test_T1097502.Test_JobSites object at 0x0000024B9D958950>.uploadHubPage", "trace": "self = <test_T1097502.Test_JobSites object at 0x0000024B9D958950>\n\n    @pytestrail.case('C30391')\n    def test_addJobSite(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        self.monitorPage = MonitorPage(self.driver)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.leftNavigationPanelPage = LeftNavigationPanelPage(self.driver)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage = EmployeesPage(self.driver)\n        time.sleep(2)\n        self.employeesPage.click_company_icon(\"Tools\")\n        self.uploadHubPage = UploadHubPage(self.driver)\n        time.sleep(5)\n>       assert self.uploadHubPage.validate_PageHeader()\nE       assert False\nE        +  where False = <bound method UploadHubPage.validate_PageHeader of <src.PageObjects.Company.Tools.UploadHubUI.UploadHubPage.UploadHubPage object at 0x0000024B9E4F3E50>>()\nE        +    where <bound method UploadHubPage.validate_PageHeader of <src.PageObjects.Company.Tools.UploadHubUI.UploadHubPage.UploadHubPage object at 0x0000024B9E4F3E50>> = <src.PageObjects.Company.Tools.UploadHubUI.UploadHubPage.UploadHubPage object at 0x0000024B9E4F3E50>.validate_PageHeader\nE        +      where <src.PageObjects.Company.Tools.UploadHubUI.UploadHubPage.UploadHubPage object at 0x0000024B9E4F3E50> = <test_T1097502.Test_JobSites object at 0x0000024B9D958950>.uploadHubPage\n\nsrc\\Tests\\SmokeSanityTestSuite\\Company\\Tools\\UploadHubUI\\test_T1097502.py:30: AssertionError"}, "start": 1707120728273, "stop": 1707120779434, "uuid": "c467df6a-b50e-4ba8-bdf7-b1c628328955", "historyId": "71cb8dd6113c411f169522129b0389b3", "testCaseId": "71cb8dd6113c411f169522129b0389b3", "fullName": "src.Tests.SmokeSanityTestSuite.Company.Tools.UploadHubUI.test_T1097502.Test_JobSites#test_addJobSite", "labels": [{"name": "tag", "value": "testrail(ids=('C30391',))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.Company.Tools.UploadHubUI"}, {"name": "suite", "value": "test_T1097502"}, {"name": "subSuite", "value": "Test_JobSites"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "21556-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.Company.Tools.UploadHubUI.test_T1097502"}]}