{"name": "test_user_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: 'chromedriver.exe' executable needs to be in PATH. Please see https://chromedriver.chromium.org/home", "trace": "self = <selenium.webdriver.chrome.service.Service object at 0x000001F03FAB5B10>\n\n    def start(self) -> None:\n        \"\"\"Starts the Service.\n    \n        :Exceptions:\n         - WebDriverException : Raised either when it can't start the service\n           or when it can't connect to the service\n        \"\"\"\n        try:\n            self._start_process(self.path)\n        except WebDriverException as err:\n            if \"executable needs to be in PATH\" in err.msg:\n                logger.debug(\"driver not found in PATH, trying Selenium Manager\")\n                browser = self.__class__.__module__.split(\".\")[-2]\n    \n                try:\n>                   path = SeleniumManager().driver_location(browser)\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\common\\service.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:74: in driver_location\n    result = self.run((binary, flag, browser))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nargs = ('C:\\\\Users\\\\prade\\\\PycharmProjects\\\\allgeo_web_app_pro\\\\venv\\\\Lib\\\\site-packages\\\\selenium\\\\webdriver\\\\common\\\\windows\\\\selenium-manager.exe', '--browser', 'chrome')\n\n    @staticmethod\n    def run(args: Tuple[str, str, str]) -> str:\n        \"\"\"\n        Executes the Selenium Manager Binary.\n        :Args:\n         - args: the components of the command being executed.\n        :Returns: The log string containing the driver location.\n        \"\"\"\n        command = \" \".join(args)\n        logger.debug(f\"Executing: {command}\")\n        completed_proc = subprocess.run(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        stdout = completed_proc.stdout.decode(\"utf-8\").rstrip(\"\\n\")\n        stderr = completed_proc.stderr.decode(\"utf-8\").rstrip(\"\\n\")\n        if completed_proc.returncode:\n>           raise SeleniumManagerException(f\"Selenium manager failed for: {command}.\\n{stdout}{stderr}\")\nE           selenium.common.exceptions.SeleniumManagerException: Message: Selenium manager failed for: C:\\Users\\prade\\PycharmProjects\\allgeo_web_app_pro\\venv\\Lib\\site-packages\\selenium\\webdriver\\common\\windows\\selenium-manager.exe --browser chrome.\nE           WARN\tError getting version of chromedriver 120. Retrying with chromedriver 119 (attempt 1/5)\nE           WARN\tError getting version of chromedriver 119. Retrying with chromedriver 118 (attempt 2/5)\nE           WARN\tError getting version of chromedriver 118. Retrying with chromedriver 117 (attempt 3/5)\nE           WARN\tError getting version of chromedriver 117. Retrying with chromedriver 116 (attempt 4/5)\nE           WARN\tError getting version of chromedriver 116. Retrying with chromedriver 115 (attempt 5/5)\nE           ERROR\tThe chromedriver version cannot be discovered\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:93: SeleniumManagerException\n\nDuring handling of the above exception, another exception occurred:\n\nrequest = <SubRequest 'setup_driver' for <Function test_user_login>>, getBrowser = 'chrome', getEnvironment = 'production'\n\n    @pytest.fixture\n    def setup_driver(request, getBrowser, getEnvironment):\n        if getBrowser == \"chrome\":\n           #web_driver = webdriver.Chrome(executable_path=config.chromeDriver)\n            chromeOptions = webdriver.ChromeOptions()\n            file_path = str(Path.home()) + \"\\\\PycharmProjects\\\\allgeo_web_app_pro\\\\src\\\\Resources\\\\Download\"\n            print(\"download directory: \"+file_path)\n    \n            chromeOptions.add_argument(\"--window-size=1920,1080\")\n            chromeOptions.add_argument(\"--disable-extensions\")\n            chromeOptions.add_argument(\"--proxy-server='direct://'\")\n            chromeOptions.add_argument(\"--proxy-bypass-list=*\")\n            chromeOptions.add_argument(\"--start-maximized\")\n            #chromeOptions.add_argument('--headless')\n            chromeOptions.add_argument('--disable-gpu')\n            chromeOptions.add_argument('--disable-dev-shm-usage')\n            chromeOptions.add_argument('--no-sandbox')\n            chromeOptions.add_argument('--ignore-certificate-errors')\n            prefs = {\"download.default_directory\": file_path, \"profile.default_content_setting_values.automatic_downloads\": 1}\n            chromeOptions.add_experimental_option(\"prefs\", prefs)\n>           web_driver = webdriver.Chrome(executable_path=config.chromeDriver, options=chromeOptions)\n\nconftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:80: in __init__\n    super().__init__(\nvenv\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:101: in __init__\n    self.service.start()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\common\\service.py:98: in start\n    raise err\nvenv\\Lib\\site-packages\\selenium\\webdriver\\common\\service.py:88: in start\n    self._start_process(self.path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.chrome.service.Service object at 0x000001F03FAB5B10>, path = '/Drivers/chromedriver.exe'\n\n    def _start_process(self, path: str) -> None:\n        \"\"\"Creates a subprocess by executing the command provided.\n    \n        :param cmd: full command to execute\n        \"\"\"\n        cmd = [path]\n        cmd.extend(self.command_line_args())\n        try:\n            self.process = subprocess.Popen(\n                cmd,\n                env=self.env,\n                close_fds=system() != \"Windows\",\n                stdout=self.log_file,\n                stderr=self.log_file,\n                stdin=PIPE,\n                creationflags=self.creation_flags,\n            )\n            logger.debug(f\"Started executable: `{self.path}` in a child process with pid: {self.process.pid}\")\n        except TypeError:\n            raise\n        except OSError as err:\n            if err.errno == errno.ENOENT:\n>               raise WebDriverException(\n                    f\"'{os.path.basename(self.path)}' executable needs to be in PATH. {self.start_error_message}\"\n                )\nE               selenium.common.exceptions.WebDriverException: Message: 'chromedriver.exe' executable needs to be in PATH. Please see https://chromedriver.chromium.org/home\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\common\\service.py:209: WebDriverException"}, "start": 1702655897749, "stop": 1702655897749, "uuid": "40b471a1-2ec6-4db0-b958-316bdd722347", "historyId": "87e8daab1761484edc1fe0262fc2f332", "testCaseId": "87e8daab1761484edc1fe0262fc2f332", "fullName": "src.Tests.SmokeSanityTestSuite.Login_Logout.AdminLoginRoles.test_T1097546.Test_Login#test_user_login", "labels": [{"name": "tag", "value": "testrail(ids=('C31397',))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.Login_Logout.AdminLoginRoles"}, {"name": "suite", "value": "test_T1097546"}, {"name": "subSuite", "value": "Test_Login"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "34156-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.Login_Logout.AdminLoginRoles.test_T1097546"}]}