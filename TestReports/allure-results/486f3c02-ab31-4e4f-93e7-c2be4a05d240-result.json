{"name": "test_addEmployee", "status": "broken", "statusDetails": {"message": "TypeError: argument of type 'NoneType' is not iterable", "trace": "self = <test_T1097375.Test_Company object at 0x000001FF8BA947D0>\n\n    @pytestrail.case('C29669', 'C29670', 'C29671')\n    def test_addEmployee(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        self.monitorPage = MonitorPage(self.driver)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n        self.monitorPage.switch_to_ChildAccount()\n        time.sleep(2)\n        self.leftNavigationPanelPage = LeftNavigationPanelPage(self.driver)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage = EmployeesPage(self.driver)\n        time.sleep(5)\n        page_found = self.employeesPage.getPageTitle(\"Employees\")\n        assert page_found\n        self.employeesPage.click_company_icon(\"Groups\")\n        self.groupsPage = GroupsPage(self.driver)\n        time.sleep(5)\n        page_found = self.groupsPage.get_page_title(\"Groups\")\n        assert page_found\n        self.groupsPage.click_AddNew()\n        self.addEditGroupPage = AddEditGroupPage(self.driver)\n        assert self.addEditGroupPage.validate_Add_Group_Modal()\n        groupName = self.employeesPage.generate_random_string(5)\n        groupId = self.employeesPage.generate_random_string(5)\n        self.addEditGroupPage.add_group(groupId, groupName)\n>       assert self.addEditGroupPage.validate_SuccessUpdateMessage(\"successfully\")\n\nsrc\\Tests\\SmokeSanityTestSuite\\ACL_Impact\\SubmitGreyedOutButtonACLPermission\\test_T1097375.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <src.PageObjects.Company.Groups.GroupsUI.AddEditGroupPage.AddEditGroupPage object at 0x000001FF9BBF2850>, value = 'successfully'\n\n    def validate_SuccessUpdateMessage(self, value):\n        flag = bool(False)\n        actual = self.getElementText(self.SuccessFloatingMSG)\n>       if value in actual:\nE       TypeError: argument of type 'NoneType' is not iterable\n\nsrc\\PageObjects\\Company\\Groups\\GroupsUI\\AddEditGroupPage.py:50: TypeError"}, "start": 1705418060476, "stop": 1705418153029, "uuid": "edf55779-bbe8-4eba-b185-0505bcbe3290", "historyId": "f868acf2d70affaee54b1326fe9f1b30", "testCaseId": "f868acf2d70affaee54b1326fe9f1b30", "fullName": "src.Tests.SmokeSanityTestSuite.ACL_Impact.SubmitGreyedOutButtonACLPermission.test_T1097375.Test_Company#test_addEmployee", "labels": [{"name": "tag", "value": "testrail(ids=('C29669', 'C29670', 'C29671'))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.ACL_Impact.SubmitGreyedOutButtonACLPermission"}, {"name": "suite", "value": "test_T1097375"}, {"name": "subSuite", "value": "Test_Company"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "14020-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.ACL_Impact.SubmitGreyedOutButtonACLPermission.test_T1097375"}]}