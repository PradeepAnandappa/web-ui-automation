{"name": "test_LocateScheduleView", "status": "failed", "statusDetails": {"message": "AssertionError: assert '2024/04/17' == '2023-08-06'\n  - 2023-08-06\n  + 2024/04/17", "trace": "self = <test_T1097786.Test_LocateSchedule object at 0x000001D7FF748E10>\n\n    @pytestrail.case('C33010', 'C33011', 'C33012', 'C33013', 'C33014')\n    def test_LocateScheduleView(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.user_login(config.AccoundID, config.UserName, config.Password)\n        self.monitorPage = MonitorPage(self.driver)\n        self.trackingSchedulerPage = TrackingSchedulerPage(self.driver)\n        page_found = self.monitorPage.getPageTitle(\"Monitor\")\n        assert page_found\n    \n        self.leftNavigationPanelPage = LeftNavigationPanelPage(self.driver)\n        self.leftNavigationPanelPage.click_Company()\n        self.employeesPage = EmployeesPage(self.driver)\n        time.sleep(5)\n        page_found = self.employeesPage.validate_page_title()\n        assert page_found\n        self.employeesPage.click_Addnew()\n        time.sleep(2)\n        empName = self.employeesPage.generate_random_string(7)\n        empPhone = self.employeesPage.generate_random_phone_number()\n        self.employeesPage.populate_addEmployeeForm(empName, empPhone)\n        self.employeesPage.accept_termCheckbox()\n        self.employeesPage.click_Add()\n        assert self.employeesPage.validate_SuccessUpdateMessage(\"Successfully\")\n        time.sleep(2)\n    \n        self.leftNavigationPanelPage.click_Monitor()\n        time.sleep(4)\n        self.monitorPage.click_TrackingSchedularTab()\n        time.sleep(2)\n        page_URL = self.monitorPage.getPageURL()\n        Expected_URL = config.baseURL + \"/monitor/locate-schedule\"\n        assert Expected_URL == page_URL\n        self.trackingSchedulerPage = TrackingSchedulerPage(self.driver)\n        self.trackingSchedulerPage.click_AddNew()\n        self.addEditTrackingSchedulePage = AddEditTrackingSchedulePage(self.driver)\n        scheduleName = self.addEditTrackingSchedulePage.generate_random_string(5) + \"101\"\n        self.addEditTrackingSchedulePage.enter_ScheduleName(scheduleName)\n        self.addEditTrackingSchedulePage.select_Employee()\n        time.sleep(1)\n        self.addEditTrackingSchedulePage.select_Group(empName)\n        time.sleep(1)\n        self.addEditTrackingSchedulePage\n        self.addEditTrackingSchedulePage.select_Manual()\n        time.sleep(1)\n        self.addEditTrackingSchedulePage.click_Done()\n    \n        self.trackingSchedulerPage.edit_schedule(scheduleName)\n        self.addEditTrackingSchedulePage = AddEditTrackingSchedulePage(self.driver)\n        self.addEditTrackingSchedulePage.validate_EditTrackingScheduleModal()\n        self.addEditTrackingSchedulePage.click_Status_toggle()\n        startDate = \"2023-08-06\"\n        self.addEditTrackingSchedulePage.set_StartDate(startDate)\n        timeZone = \"US/Pacific\"\n        self.addEditTrackingSchedulePage.set_timeZone(timeZone)\n        self.addEditTrackingSchedulePage.select_Continuously()\n        self.addEditTrackingSchedulePage.click_Save()\n        time.sleep(1)\n        self.trackingSchedulerPage.edit_schedule(scheduleName)\n>       assert self.addEditTrackingSchedulePage.get_StartDate() == startDate\nE       AssertionError: assert '2024/04/17' == '2023-08-06'\nE         - 2023-08-06\nE         + 2024/04/17\n\nsrc\\Tests\\SmokeSanityTestSuite\\Monitor\\TrackingScheduler\\TrackingScheduleUI\\EditNonRecurringScheduler\\test_T1097786.py:79: AssertionError"}, "start": 1713347451623, "stop": 1713347589758, "uuid": "138945bc-ca5f-44ec-8e9d-058a256b1207", "historyId": "32884e64ee1eca732824002dd72ccf90", "testCaseId": "32884e64ee1eca732824002dd72ccf90", "fullName": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.EditNonRecurringScheduler.test_T1097786.Test_LocateSchedule#test_LocateScheduleView", "labels": [{"name": "tag", "value": "testrail(ids=('C33010', 'C33011', 'C33012', 'C33013', 'C33014'))"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_driver')"}, {"name": "parentSuite", "value": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.EditNonRecurringScheduler"}, {"name": "suite", "value": "test_T1097786"}, {"name": "subSuite", "value": "Test_LocateSchedule"}, {"name": "host", "value": "IN-QA-LT-01"}, {"name": "thread", "value": "263824-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.Tests.SmokeSanityTestSuite.Monitor.TrackingScheduler.TrackingScheduleUI.EditNonRecurringScheduler.test_T1097786"}]}